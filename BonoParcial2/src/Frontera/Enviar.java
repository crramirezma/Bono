/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Frontera;

import DAO.DatoDAO;
import Datos.Historico;
import Datos.ValidarDatos;
import Entidad.Sensor;
import Entidad.TipoSensor;
import java.util.ArrayList;
import java.util.Date;
import javax.persistence.EntityManager;
import javax.swing.JOptionPane;
import java.util.Random;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author crist
 */
public class Enviar extends javax.swing.JPanel {
    
    
    ValidarDatos validar=new ValidarDatos();
    DatoDAO dao=new DatoDAO();
            
    /**
     * Creates new form Enviar
     */
    public Enviar() {
        initComponents();
        TipoTabla.getColumnName(WIDTH);
        String Titulo[]={"Sensores por tipo"};
        TipoTabla.setModel(new DefaultTableModel(new Object[1][1],Titulo));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        BuscarBt = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        TipoSensorLabel = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        TipoTabla = new javax.swing.JTable();
        idSensorLabel = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        enviarBt = new javax.swing.JButton();

        setPreferredSize(new java.awt.Dimension(400, 244));

        BuscarBt.setText("Buscar");
        BuscarBt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BuscarBtActionPerformed(evt);
            }
        });

        jLabel1.setText("Tipo de sensor:");

        TipoTabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(TipoTabla);

        jLabel2.setText("id del sensor");

        enviarBt.setText("Enviar Dato");
        enviarBt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enviarBtActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(TipoSensorLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(BuscarBt, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(79, 79, 79)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(enviarBt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(idSensorLabel)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(TipoSensorLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(BuscarBt))
                        .addGap(47, 47, 47)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(idSensorLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(enviarBt)))
                .addContainerGap(16, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void BuscarBtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BuscarBtActionPerformed
        // TODO add your handling code here:
        String tipo;
        Object object[][];
        String titulo[];
        ArrayList<Integer> dato;
        TipoSensor tip;
        try{
            tipo=TipoSensorLabel.getText().toString();
            if(tipo.length()==0)
                throw new Exception();
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, "Ingrese valores porfavor","Corrija sus errores",JOptionPane.ERROR_MESSAGE);
            return;
        }
        tip=dao.leerTipo(tipo);
        if(tip==null)
            JOptionPane.showMessageDialog(null, "No existe el tipo en la base","Corrija sus errores",JOptionPane.ERROR_MESSAGE);
        else{
            dato=dao.ListaSensoresTipo(tip);
            object=new Object[dato.size()][1];
            titulo=new String[1];
            for(int i=0;i<dato.size();i++)
                object[i][0]=dato.get(i);


            titulo[0]=TipoTabla.getColumnName(0);
            TipoTabla.setModel(new DefaultTableModel(object,titulo));
        }
        
        
    }//GEN-LAST:event_BuscarBtActionPerformed

    private void enviarBtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enviarBtActionPerformed
        // TODO add your handling code here:
        int id_sensor;
        
        Sensor sensor;
        try {
            id_sensor=Integer.parseInt(idSensorLabel.getText().toString());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Ingrese valores numericos solamente porfavor","Corrija sus errores",JOptionPane.ERROR_MESSAGE);
            return;
        }
        //System.out.println(id_sensor+"");
        sensor=validar.verificarSensor(id_sensor);
        
        if(sensor==null){
            JOptionPane.showMessageDialog(null, "El id no se encuentra en la base, intentelo nuevamente","Corrija sus errores",JOptionPane.WARNING_MESSAGE);
        }else{
            /*
            //probando la subida de un historico
            Historico h=new Historico();
            h.setValor(5000);
            h.setProcesamiento(Historico.NORMAL);
            h.setFecha_y_hora(new Date());
            h.setSensor(sensor);
            //System.out.println(h.getFecha_y_hora().toString());
            
            dao.crearHistorico(h);

            
            //funcionamiento del randomLim
            
            System.out.println(RandomLim(id_sensor));
                     
            
            //probando la validacion de datos
            
            Historico h=new Historico();
            h.setValor(10000000);
            h.setProcesamiento(Historico.NORMAL);
            h.setFecha_y_hora(new Date());
            h.setSensor(sensor);
            
            if(!validar.verificarDatoHistorico(h)){
                h.setProcesamiento(Historico.ERROR);
                JOptionPane.showMessageDialog(null, "Hay un problema con el sensor, porfavor revise","Precacución",JOptionPane.WARNING_MESSAGE);
            }else{
                h.setProcesamiento(Historico.NORMAL);
                JOptionPane.showMessageDialog(null, "Todo correcto","Todo bien",JOptionPane.INFORMATION_MESSAGE);
            }
            */   
            
            //probando todo junto
            Historico h=new Historico();
            h.setValor(RandomLim(id_sensor));
            h.setProcesamiento(Historico.NORMAL);
            h.setFecha_y_hora(new Date());
            h.setSensor(sensor);
            
            if(!validar.verificarDatoHistorico(h)){
                h.setProcesamiento(Historico.ERROR);
                JOptionPane.showMessageDialog(null, "Hay un problema con el sensor, porfavor revise","Precacución",JOptionPane.WARNING_MESSAGE);
            }else{
                h.setProcesamiento(Historico.NORMAL);
                //JOptionPane.showMessageDialog(null, "Todo correcto","Todo bien",JOptionPane.INFORMATION_MESSAGE);
            }
            dao.crearHistorico(h);
            JOptionPane.showMessageDialog(null, "El dato fue subido a la base con exito\nValor tomado para el sensor:"+h.getValor(),"Tarea completada",JOptionPane.INFORMATION_MESSAGE);
            /*
            Historico historico=new Historico();
            
            historico.setValor(RandomLim(id_sensor));
            historico.setSensor(sensor);
            if(!validar.verificarDatoHistorico(historico)){
                historico.setProcesamiento("Malo");
                JOptionPane.showMessageDialog(null, "Hay un problema con el sensor, porfavor revise","Precacución",JOptionPane.WARNING_MESSAGE);
            }else{
                historico.setProcesamiento("Normal");
            }
            historico.setFecha_y_hora(new Date());
            
            dao.crearHistorico(historico);
            
            
            JOptionPane.showMessageDialog(null, "El dato fue subido a la base con exito","Tarea completada",JOptionPane.INFORMATION_MESSAGE);*/
        }
        
    }//GEN-LAST:event_enviarBtActionPerformed
    
    
    //ya que los valores que debe tener los registros son aleatorios, se creo una funcion
    //que consulta a la base por los valores limiter
    //Nota: la funcion deja un leve margen para errores(valores que no se encuentren entre los normales)
    public int RandomLim(int id_sensor){
        Sensor sensor =dao.leerSensor(id_sensor);
        if(sensor==null){
            return -1;
        }else{
            Random r=new Random();
            int ran=(int)r.nextInt(sensor.getTipo().getMaximoPermitido())+(sensor.getTipo().getMinimoPermitido()-21);
            return ran;
            
        }   
    }   
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BuscarBt;
    private javax.swing.JTextField TipoSensorLabel;
    private javax.swing.JTable TipoTabla;
    private javax.swing.JButton enviarBt;
    private javax.swing.JTextField idSensorLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
